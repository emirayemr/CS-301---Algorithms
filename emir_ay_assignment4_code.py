"""Emir Ay_Assignment4_code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VGX0t0uH_bHv0T1pUkxDKK6psWcKQu60
"""

# Emir Ay - CS 301 (Assignment 4)
# December 2022
import numpy as np

def open_benchmark(file_name):
  benchmark = open(file_name, "r")
  data = benchmark.read()
  return data.split("\n")

file_name = str(input("Enter the benchmark file: "))
data_list = open_benchmark(file_name)

x = len(data_list[0]) #length of the x-axis of dp table
y = len(data_list) #length of the y-axis of dp table

#initialization of the dp table
mat = np.zeros((x+1, y+1))

for i in range(x+1):
  for j in range(y+1):
    if j>0:
      line = data_list[j-1]
    if i==0 or j==0: #initialize leftmost column and the top row -> 0
      mat[i][j] = 0
    elif line[i-1] == "*": #if there is a weed, "*" represents the weeds in my benchmark files
      mat[i][j] = 1+max(mat[i-1][j],mat[i][j-1])
    else:
      mat[i][j] = max(mat[i-1][j],mat[i][j-1])

def AMR(A,path_x, path_y,x,y): #detects the optimum path
  for i in range(x+y-1):
    if A[x-1][y] >= A[x][y-1]:
      path_x[i] = x
      path_y[i] = y
      x = x-1
    else:
      path_x[i] = x
      path_y[i] = y
      y = y-1

path_x = [None]*(x+y) #stores the x-axis values for the optimum path
path_y = [None]*(x+y) #similarly, stores y-axis values
#at the end, the position will be (x,y) -> end point
path_x[0]=x
path_y[0]=y

AMR(mat,path_x,path_y,x,y)
print("The path (in form ( x, y )) is: ")
n=x+y-2
path_x[n]=1
path_y[n]=1 
#display the optimum path
while n>=0:
  print("(", path_x[n], ",", path_y[n],")")
  n-=1